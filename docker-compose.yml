# Docker Compose configuration

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: obtv_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-obtv_studio}
      POSTGRES_USER: ${POSTGRES_USER:-obtv_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - obtv_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-obtv_user} -d ${POSTGRES_DB:-obtv_studio}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # OBTV Studio Manager Application
  obtv_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: obtv_studio_manager
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-obtv_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-obtv_studio}
      SESSION_SECRET: ${SESSION_SECRET}
      REPL_ID: ${REPL_ID}
      REPLIT_DOMAINS: ${REPLIT_DOMAINS}
      ISSUER_URL: ${ISSUER_URL:-https://replit.com/oidc}
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: ${POSTGRES_DB:-obtv_studio}
      PGUSER: ${POSTGRES_USER:-obtv_user}
      PGPASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5000:5000"
    networks:
      - obtv_network
    volumes:
      - ./logs:/app/logs
      - uploads_data:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  obtv_network:
    driver: bridge